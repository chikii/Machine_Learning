# -*- coding: utf-8 -*-
"""SIMPLE LINEAR REGRESSION MODEL.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kOAA-j9NVF9VXHxg5qKFcF5wAzMfnnR2

#                                SIMPLE LINEAR REGRESSION MODEL
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets,linear_model
from sklearn.metrics import mean_squared_error

daib = datasets.load_diabetes()

daib.keys()

"""#### here we have taken only one feature to understand better(to plot a line)"""

daib_X = daib.data[:,np.newaxis,2]
# : -> all data,
# np.newaxis -> to convert (x,) to (x,1)
# if data[np.newaxis, :] -> this convert (x,) to (1,x)
# 2 -> it select column no 2 (2nd vala feature lia apn ne)
daib_X.shape

daib.target.shape

daib_X_train = daib_X[:-30]
daib_Y_train = daib.target[:-30]

daib_X_test = daib_X[-30:]
daib_Y_test = daib.target[-30:]

model = linear_model.LinearRegression()

model.fit(daib_X_train,daib_Y_train)

daib_Y_predict = model.predict(daib_X_test)

mse = mean_squared_error(daib_Y_test,daib_Y_predict)
mse

print('weight : ',model.coef_)
print('intercept : ',model.intercept_)

plt.scatter(daib_X_test,daib_Y_test)
plt.plot(daib_X_test,daib_Y_predict)
plt.show()

"""##                                                  model complete  -- :)

## Now taking all the FEATURES.
"""

daib_data = daib.data[:]
daib_data.shape

daib_X_train = daib_data[:-30]
daib_Y_train = daib.target[:-30]

daib_X_test = daib_data[-30:]
daib_y_test = daib.target[-30:]

model2 = linear_model.LinearRegression()

model2.fit(daib_X_train,daib_Y_train)

daib_Y_predict = model2.predict(daib_X_test)

mse = mean_squared_error(daib_Y_test,daib_Y_predict)
print('mean squared error : ',mse)
print('wieght : ',model2.coef_)
print('intercept : ',model2.intercept_)

"""### error decreased as we increased the no. of features

# COMPLETE ------ :)

#### makig my own model (to get the square of given no.)
"""

#data = np.array([[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10]])
data = np.array([[item for i in range(4)] for item in range(2,11)]).reshape(18,2)
data_X_train = data
data_X_test = np.array([[2,2],[5,5],[10,10],[25,25]])

data_Y_train = np.array([[item*item for i in range(2)] for item in range(2,11)]).reshape(18,1)
data_Y_test = np.array([4,25,100,625])
print(data_Y_train)

model3 = linear_model.LinearRegression()

model3.fit(data_X_train,data_Y_train)

data_Y_predict = model3.predict(data_X_test)
data_Y_predict

mse = mean_squared_error(data_Y_test,data_Y_predict)
print('wieght : ', model3.coef_)
print('intercept : ', model3.intercept_)
mse



